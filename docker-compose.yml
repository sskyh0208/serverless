services:
  client:
    container_name: client
    build:
      context: .
      dockerfile: .docker/node/Dockerfile
    tty: true
    volumes:
      - type: bind
        source: ./src/client
        target: /app
    ports:
      - target: 3000
        published: ${WEB_PUBLISHED_PORT:-3000}
        protocol: tcp
        mode: host
    working_dir: /app/
    # command: npm run dev

  api:
    container_name: api
    build:
      context: ./src/api/python
      dockerfile: Dockerfile
      target: dev
    tty: true
    volumes:
      - type: bind
        source: ./src/api/python
        target: /api
      - type: bind
        source: ./.aws
        target: /root/.aws
      - type: bind
        source: ./src/api/scripts
        target: /scripts
    ports:
      - target: 8080
        published: ${WEB_PUBLISHED_PORT:-8080}
        protocol: tcp
        mode: host
    working_dir: /api
    env_file:
      - ./src/api/python/.env
    command: sh -c "poetry install && uvicorn app.main:app --host 0.0.0.0 --port 8080 --reload"

  dynamodb-local:
    container_name: dynamodb-local
    image: amazon/dynamodb-local
    user: root
    ports:
      - "8000:8000"
    volumes:
      - type: volume
        source: db-store
        target: /data
    command: -jar DynamoDBLocal.jar -sharedDb -dbPath /data

  dynamodb-admin:
    container_name: dynamodb-admin
    image: aaronshaf/dynamodb-admin
    ports:
      - "8001:8001"
    environment:
      - DYNAMO_ENDPOINT=http://dynamodb-local:8000

  sam:
    container_name: sam
    build:  
      context: .docker/sam
      dockerfile: Dockerfile
    volumes: 
      - ./src:/home/sam/src
      - ./.aws:/root/.aws
    working_dir: /home/sam/src
    environment:
      - DOCKER_HOST=tcp://dind:2375
      - DOCKER_DRIVER=overlay
    tty: true
    depends_on:
      - dind
    networks:
      - dind-network

  minio:
    container_name: minio
    image: minio/minio:latest
    volumes:
      - type: volume
        source: minio-store
        target: /data
    entrypoint: >
      /bin/sh -c "
        mkdir -p /data/minio/local-bucket /data/minio/local-bucket;
        /usr/bin/minio server /data/minio --console-address ':9001' /data;
      "
    ports:
      - target: 9000
        published: ${MINIO_PUBLISHED_PORT:-9000}
        protocol: tcp
        mode: host
      - target: 9001
        published: ${MINIO_CONSOLE_PORT:-9001}
        protocol: tcp
        mode: host
    environment:
      - MINIO_ROOT_USER=local
      - MINIO_ROOT_PASSWORD=local1234

  dind:
    container_name: dind
    image: docker:dind
    privileged: true
    environment:
      - DOCKER_TLS_CERTDIR=
    networks:
      - dind-network

volumes:
  db-store:
  minio-store:

networks:
  dind-network:
    driver: bridge