AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Api

Parameters:
  ProductName:
    Type: String
    Description: Product Name
  Environment:
    Type: String
    Description: Environment
    AllowedValues:
      - dev
      - stg
      - prod
  ApiStageName:
    Type: String
    Description: API Gateway stage name
  AllowOrigins:
    Type: String
    Description: "CORS: Access-Control-Allow-Origin"
  AllowCredentials:
    Type: String
    Description: "CORS: Access-Control-Allow-Credentials"
  AllowMethods:
    Type: String
    Description: "CORS: Access-Control-Allow-Methods"
  AllowHeaders:
    Type: String
    Description: "CORS: Access-Control-Allow-Headers"

Globals:
  Function:
    Timeout: 10

Resources:
  ApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Ref ApiStageName
      EndpointConfiguration: REGIONAL
      OpenApiVersion: "3.0.1"
      Cors: "'*'"
      Auth:
        DefaultAuthorizer: CognitoAuthorizer
        Authorizers:
          CognitoAuthorizer:
            UserPoolArn: !GetAtt CognitoUserPool.Arn
  
  CognitoUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: !Sub "${ProductName}-${Environment}-user-pool"
      Policies:
        PasswordPolicy:
          MinimumLength: 8
      UsernameAttributes:
        - email
      Schema:
        - AttributeDataType: String
          Name: email
          Required: false
  
  CognitoUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      UserPoolId: !Ref CognitoUserPool
      ClientName: !Sub "${ProductName}-${Environment}-user-pool-client"
      GenerateSecret: false
      ExplicitAuthFlows:
        - ALLOW_ADMIN_USER_PASSWORD_AUTH
        - ALLOW_CUSTOM_AUTH
        - ALLOW_REFRESH_TOKEN_AUTH
        - ALLOW_USER_PASSWORD_AUTH
        - ALLOW_USER_SRP_AUTH

  DynamoDBCommonTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub "${ProductName}-${Environment}-dynamodb-common"
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: PK
          AttributeType: S
        - AttributeName: SK
          AttributeType: S
      KeySchema:
        - AttributeName: PK
          KeyType: HASH
        - AttributeName: SK
          KeyType: RANGE

  PythonFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${ProductName}-${Environment}-function-python"
      PackageType: Image
      Architectures:
        - x86_64
      Environment:
        Variables:
          ALLOW_ORIGINS: !Ref AllowOrigins
          ALLOW_CREDENTIALS: !Ref AllowCredentials
          ALLOW_HEADERS: !Ref AllowHeaders
          ALLOW_METHODS: !Ref AllowMethods
          DYNAMODB_TABLE_NAME: !Ref DynamoDBCommonTable
          COGNITO_USER_POOL_ID: !Ref CognitoUserPool
          COGNITO_USER_POOL_CLIENT_ID: !Ref CognitoUserPoolClient
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref DynamoDBCommonTable
      Events:
        HealthCheck:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /health_check
            Method: get
        ItemsGet:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /items
            Method: get
        LogsGet:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /logs
            Method: get
        FilesGet:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /files
            Method: get
        FilesPost:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /files
            Method: post
      Tags:
        Product: !Ref ProductName
        Environment: !Ref Environment
        Name: !Sub "${ProductName}-${Environment}-function-python"
    Metadata:
      Dockerfile: Dockerfile
      DockerContext: ./python
      DockerTag: python3.12-v1
      DockerTarget: !Ref Environment

Outputs:
  CognitoUserPoolId:
    Description: "Cognito User Pool ID"
    Value: !Ref CognitoUserPool
  CognitoUserPoolClientId:
    Description: "Cognito User Pool Client ID"
    Value: !Ref CognitoUserPoolClient
  DynamoDBCommonTableName:
    Description: "DynamoDB Common Table Name"
    Value: !Ref DynamoDBCommonTable
  DynamoDBCommonTableArn:
    Description: "DynamoDB Common Table ARN"
    Value: !GetAtt DynamoDBCommonTable.Arn
  PythonApiHealthCheckEndpoint:
    Description: "Endpoint for HealthCheck"
    Value: !Sub "https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/${ApiStageName}/health_check"
  PythonFunctionName:
    Description: "Python Lambda Function Name"
    Value: !Ref PythonFunction
  PythonFunctionArn:
    Description: "Python Lambda Function ARN"
    Value: !GetAtt PythonFunction.Arn
  PythonFunctionIamRole:
    Description: "Implicit IAM Role created for Python function"
    Value: !GetAtt PythonFunctionRole.Arn